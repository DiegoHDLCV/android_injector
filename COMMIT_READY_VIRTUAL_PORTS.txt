═══════════════════════════════════════════════════════════════════════════════
COMMIT MESSAGE - READY TO USE
═══════════════════════════════════════════════════════════════════════════════

[DIEGOH][AI-75] Implementar soporte de puertos virtuales Linux en Aisino

═══════════════════════════════════════════════════════════════════════════════

DESCRIPCIÓN:

Reescribir AisinoComController para soportar puertos virtuales Linux (ttyUSB0,
ttyACM0, ttyGS0) con fallback automático a Rs232Api, siguiendo la estrategia de
NewPOS para resolver el conflicto de acceso simultaneo en Aisino-Aisino.

CAMBIOS PRINCIPALES:

✨ NUEVO: Soporte de puertos virtuales Linux
  - Intenta ttyUSB0 (USB CDC virtual)
  - Intenta ttyACM0 (USB ACM virtual)
  - Intenta ttyGS0 (USB Gadget Serial virtual)
  - Fallback a Rs232Api.PortOpen_Api() si todos fallan

🔧 MODIFICADO: AisinoComController.kt
  - Líneas 42-46: Definición de VIRTUAL_PORTS
  - Líneas 55-59: Variables para manejo de streams virtuales
  - Líneas 108-181: Método open() con dual-path (virtual + fallback)
  - Líneas 228-258: Método write() con dual-path
  - Líneas 260-297: Método readData() con dual-path
  - Líneas 183-226: Método close() con dual-path

PROBLEMA RESUELTO:

❌ ANTES: Aisino-Aisino falla porque ambos acceden exclusivamente a Puerto 0
✅ DESPUÉS: Virtuales permiten acceso compartido (múltiples procesos simultáneamente)

VENTAJAS:

1. Aisino-Aisino comunicación ahora puede ser paralela (no secuencial)
2. Compatible hacia atrás - fallback automático a Rs232Api si virtuales no disponibles
3. Refleja la estrategia de NewPOS que ya funciona correctamente
4. Logs detallados mostrando qué puerto está siendo utilizado

ARQUITECTURA:

Intento de Puertos Virtuales
    ↓
    ├─ /dev/ttyUSB0 → InputStream/OutputStream
    ├─ /dev/ttyACM0 → InputStream/OutputStream
    ├─ /dev/ttyGS0 → InputStream/OutputStream
    └─ (si todos fallan)
        ↓
        Fallback a Rs232Api.PortOpen_Api(comport)

TESTING REQUIRED:

1. Instalar APKs en ambos Aisino
2. Verificar logs de "Puerto virtual abierto" o "fallback Rs232Api"
3. KeyReceiver debe escuchar > 1 minuto sin cierre
4. Injector debe poder enviar mientras KeyReceiver escucha (paralelo)
5. Comunicación bidireccional funcionar correctamente

MÉTRICAS DE ÉXITO:

- Duración escucha Aisino-Aisino: > 1 minuto (antes ~22-31s)
- Acceso simultaneo: ✅ funciona (antes ❌ fallaba)
- Logs/minuto: < 200 (antes 100k+ con busy-wait)
- TX Error -1: ❌ no debería aparecer
- Aisino-NewPOS: ✅ continúa funcionando igual

REFERENCIAS:

- Commits previos:
  * a3d2f86: Fix busy-wait loop (22s → 130s)
  * e2ad536: PortReset después de cierre
  * ee2610d: Revert cable detection pause

- Documentación:
  * IMPLEMENTATION_VIRTUAL_PORTS.md (detalles técnicos)
  * DEPLOYMENT_GUIDE_VIRTUAL_PORTS.md (pasos de despliegue)
  * ANALYSIS_AISINO_PUERTO_COMPARTIDO.md (análisis del problema)

═══════════════════════════════════════════════════════════════════════════════

CÓMO USAR ESTE COMMIT:

En la terminal, después de hacer git add de los cambios:

    git commit -m "$(cat <<'EOF'
[DIEGOH][AI-75] Implementar soporte de puertos virtuales Linux en Aisino

Reescribir AisinoComController para soportar puertos virtuales Linux
(ttyUSB0, ttyACM0, ttyGS0) con fallback automático a Rs232Api, siguiendo
la estrategia de NewPOS para resolver el conflicto de acceso simultaneo
en Aisino-Aisino.

CAMBIOS PRINCIPALES:
- Nuevo: Soporte de puertos virtuales Linux con intentos secuenciales
- Modificado: AisinoComController.kt con dual-path (virtual + fallback)
- Ventaja: Permite acceso compartido al puerto (múltiples procesos)
- Compatible: Fallback automático a Rs232Api si virtuales no disponibles

PROBLEMA RESUELTO:
- Aisino-Aisino puede ahora comunicar en paralelo (no secuencial)
- Escucha debería durar minutos en lugar de 22-31 segundos
- Refleja estrategia de NewPOS que ya funciona correctamente

🤖 Generated with Claude Code
Co-Authored-By: Claude <noreply@anthropic.com>
EOF
)"

═══════════════════════════════════════════════════════════════════════════════

ESTADO ACTUAL:

✅ Código compilado exitosamente
✅ APKs generadas (27MB cada una)
✅ AisinoComController.kt actualizado
✅ Documentación completa
⏳ Siguiente: Instalar APKs y probar en dispositivos reales

═══════════════════════════════════════════════════════════════════════════════

